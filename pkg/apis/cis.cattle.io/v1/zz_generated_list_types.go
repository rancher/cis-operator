/*
Copyright 2025 Rancher Labs, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by main. DO NOT EDIT.

// +k8s:deepcopy-gen=package
// +groupName=cis.cattle.io
package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ClusterScanList is a list of ClusterScan resources
type ClusterScanList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []ClusterScan `json:"items"`
}

func NewClusterScan(namespace, name string, obj ClusterScan) *ClusterScan {
	obj.APIVersion, obj.Kind = SchemeGroupVersion.WithKind("ClusterScan").ToAPIVersionAndKind()
	obj.Name = name
	obj.Namespace = namespace
	return &obj
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ClusterScanProfileList is a list of ClusterScanProfile resources
type ClusterScanProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []ClusterScanProfile `json:"items"`
}

func NewClusterScanProfile(namespace, name string, obj ClusterScanProfile) *ClusterScanProfile {
	obj.APIVersion, obj.Kind = SchemeGroupVersion.WithKind("ClusterScanProfile").ToAPIVersionAndKind()
	obj.Name = name
	obj.Namespace = namespace
	return &obj
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ClusterScanReportList is a list of ClusterScanReport resources
type ClusterScanReportList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []ClusterScanReport `json:"items"`
}

func NewClusterScanReport(namespace, name string, obj ClusterScanReport) *ClusterScanReport {
	obj.APIVersion, obj.Kind = SchemeGroupVersion.WithKind("ClusterScanReport").ToAPIVersionAndKind()
	obj.Name = name
	obj.Namespace = namespace
	return &obj
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ClusterScanBenchmarkList is a list of ClusterScanBenchmark resources
type ClusterScanBenchmarkList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []ClusterScanBenchmark `json:"items"`
}

func NewClusterScanBenchmark(namespace, name string, obj ClusterScanBenchmark) *ClusterScanBenchmark {
	obj.APIVersion, obj.Kind = SchemeGroupVersion.WithKind("ClusterScanBenchmark").ToAPIVersionAndKind()
	obj.Name = name
	obj.Namespace = namespace
	return &obj
}
